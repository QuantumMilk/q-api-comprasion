version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rest-api:
    build:
      context: .
      dockerfile: ./rest-api/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    volumes:
      - ./rest-api/app:/app/app
      - ./common:/app/common

  grpc-api:
    build:
      context: .
      dockerfile: ./grpc-api/Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    volumes:
      - ./grpc-api/app:/app/app
      - ./common:/app/common

  graphql-api:
    build:
      context: .
      dockerfile: ./graphql-api/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    volumes:
      - ./graphql-api/app:/app/app
      - ./common:/app/common

volumes:
  postgres_data: