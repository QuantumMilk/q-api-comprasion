# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import service_pb2 as service__pb2


class UserServiceStub(object):
    """Пользовательский сервис
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUsers = channel.unary_unary(
                '/usersorders.UserService/GetUsers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.Users.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/usersorders.UserService/GetUser',
                request_serializer=service__pb2.UserRequest.SerializeToString,
                response_deserializer=service__pb2.User.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/usersorders.UserService/CreateUser',
                request_serializer=service__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=service__pb2.User.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/usersorders.UserService/DeleteUser',
                request_serializer=service__pb2.UserRequest.SerializeToString,
                response_deserializer=service__pb2.DeleteResponse.FromString,
                )


class UserServiceServicer(object):
    """Пользовательский сервис
    """

    def GetUsers(self, request, context):
        """Получить всех пользователей
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Получить пользователя по ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Создать нового пользователя
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Удалить пользователя
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=service__pb2.Users.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=service__pb2.UserRequest.FromString,
                    response_serializer=service__pb2.User.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=service__pb2.CreateUserRequest.FromString,
                    response_serializer=service__pb2.User.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=service__pb2.UserRequest.FromString,
                    response_serializer=service__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'usersorders.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Пользовательский сервис
    """

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.UserService/GetUsers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            service__pb2.Users.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.UserService/GetUser',
            service__pb2.UserRequest.SerializeToString,
            service__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.UserService/CreateUser',
            service__pb2.CreateUserRequest.SerializeToString,
            service__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.UserService/DeleteUser',
            service__pb2.UserRequest.SerializeToString,
            service__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OrderServiceStub(object):
    """Сервис заказов
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOrders = channel.unary_unary(
                '/usersorders.OrderService/GetOrders',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.Orders.FromString,
                )
        self.GetOrdersByUser = channel.unary_unary(
                '/usersorders.OrderService/GetOrdersByUser',
                request_serializer=service__pb2.UserRequest.SerializeToString,
                response_deserializer=service__pb2.Orders.FromString,
                )
        self.CreateOrder = channel.unary_unary(
                '/usersorders.OrderService/CreateOrder',
                request_serializer=service__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=service__pb2.Order.FromString,
                )
        self.DeleteOrder = channel.unary_unary(
                '/usersorders.OrderService/DeleteOrder',
                request_serializer=service__pb2.OrderRequest.SerializeToString,
                response_deserializer=service__pb2.DeleteResponse.FromString,
                )


class OrderServiceServicer(object):
    """Сервис заказов
    """

    def GetOrders(self, request, context):
        """Получить все заказы
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrdersByUser(self, request, context):
        """Получить заказы по ID пользователя
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrder(self, request, context):
        """Создать новый заказ
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrder(self, request, context):
        """Удалить заказ
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrders,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=service__pb2.Orders.SerializeToString,
            ),
            'GetOrdersByUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrdersByUser,
                    request_deserializer=service__pb2.UserRequest.FromString,
                    response_serializer=service__pb2.Orders.SerializeToString,
            ),
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=service__pb2.CreateOrderRequest.FromString,
                    response_serializer=service__pb2.Order.SerializeToString,
            ),
            'DeleteOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrder,
                    request_deserializer=service__pb2.OrderRequest.FromString,
                    response_serializer=service__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'usersorders.OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Сервис заказов
    """

    @staticmethod
    def GetOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.OrderService/GetOrders',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            service__pb2.Orders.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrdersByUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.OrderService/GetOrdersByUser',
            service__pb2.UserRequest.SerializeToString,
            service__pb2.Orders.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.OrderService/CreateOrder',
            service__pb2.CreateOrderRequest.SerializeToString,
            service__pb2.Order.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/usersorders.OrderService/DeleteOrder',
            service__pb2.OrderRequest.SerializeToString,
            service__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
